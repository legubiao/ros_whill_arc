<launch>
    <!--加载机器人的模型文件-->
    <arg name="model" default="$(find ros_whill)/xacro/modelc.xacro" />
    <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>
  
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
        <remap from="/joint_states" to="/whill/states/jointState" />
    </node>

    <!--轮椅驱动包-->
    <arg name="serialport" default="$(env TTY_WHILL)"/>
    <node pkg="ros_whill" type="ros_whill" name="whill" output="screen" >

        <!-- Initial Speed Profile -->
        <rosparam file="$(find ros_whill)/params/initial_speedprofile.yaml" command="load" />

        <!-- Keep Connected: If you specify true,ros_whill try to keep connection by re-opening port and sending power on command.
             If you'd like to turn WHILL off by command or manually while using ros_whill, set value to false. 
             Otherwise WHILL automatically turns on.
         -->
        <param name="keep_connected" value="true" />

        <!-- Serial Device name -->
        <param name="serialport" value="$(arg serialport)"/>

        <!-- Output Odometry tf or not. If other node publishes odom->base_link tf, Change value to "false" -->
        <param name="publish_tf" value="true"/>  
        
    </node>

    <!-- Joy Node 手柄控制节点-->
    <node name="joynode" pkg="joy" type="joy_node" args="" output="screen">
        <param name="autorepeat_rate" value="10"/>
        <param name="dev" value="/dev/input/js0"/>
    </node>
    <node name="joy_control" pkg="map_visualizer" type="joy_control" output="screen"/>

    <!--Left Lidar 左激光雷达-->
    <node name="left_lidar" pkg="sick_tim" type="sick_tim551_2050001" respawn="false" output="screen">
        <param name="hostname" type="string" value="172.16.127.11"/>
        <param name="intensity" type="bool" value="false" />
        <param name="port" type="string" value="2112" />
        <param name="timelimit" type="int" value="5" />
        <param name="min_ang" type="double" value="-1.10" />
        <param name="max_ang" type="double" value="2.00" />
        <param name="frame_id" type="str" value="left_lidar"/>
        <remap from="scan" to="/left_lidar"/>
    </node>
    <node name="baselink_to_left_lidar" pkg="tf2_ros" type="static_transform_publisher" args="-0.11 0.28 -0.025 0 0.6111 -1.5714 frontwheel_right left_lidar" output="screen"/>
    
    <!--Right Lidar 右激光雷达-->
    <node name="right_lidar" pkg="sick_tim" type="sick_tim551_2050001" respawn="false" output="screen">
        <param name="hostname" type="string" value="172.16.127.10" />
        <param name="intensity" type="bool" value="false" />
        <param name="port" type="string" value="2112" />
        <param name="timelimit" type="int" value="5" />
        <param name="min_ang" type="double" value="-2.0796" />
        <param name="max_ang" type="double" value="1.1" />
        <param name="frame_id" type="str" value="right_lidar"/>
        <remap from="scan" to="/right_lidar"/>
    </node>
    <node name="baselink_to_right_lidar" pkg="tf2_ros" type="static_transform_publisher" args="-0.11 0.28 0.025 0 -0.6111 -1.5714 frontwheel_left right_lidar" output="screen"/>

    <!-- Sensor Fusion 融合左右两个激光雷达的数据-->
    <node name="laser_scan_fusion" pkg="ros_whill" type="laser_scan_fusion">
        <param name="target_frame" value="base_link"/>
        <param name="fused_cloud_topic" value="/fused_cloud"/>
        <param name="scan0" value="/left_lidar"/>
        <param name="scan1" value="/right_lidar"/>
        <!--param name="scan2" value="/realsense_scan"/-->
    </node>
    <node name="fused_cloud_to_fused_scan" pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node">
        <remap from="cloud_in" to="/fused_cloud"/>
        <remap from="scan" to="/scan"/>
        <param name="angle_min" value="-3.14159265"/>
        <param name="angle_max" value="3.14159265"/>
        <param name="range_min" value="0"/>
        <param name="range_max" value="100"/>
    </node>

    <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch"/>
    <node pkg="map_visualizer" type="pose_publisher.py" name="pose_publisher" output="screen" />

</launch>

